import sys
import math
from operator import itemgetter

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

factory_count = int(input())  # the number of factories
link_count = int(input())  # the number of links between factories
link_list = []

def get_near_link(base_id):
    available = []
    for link in link_list:
        if link["fact1"] == base_id or link["fact2"] == base_id:
            available.append(link)
    available.sort(key=)




my_dict = {}
for i in range(link_count):
    my_dict["fact1"], my_dict["fact2"], my_dict["distance"] = [int(j) for j in input().split()]
    link_list.append(my_dict)
    print("link:", my_dict, file=sys.stderr)
# game loop
while True:
    my_bases = []
    entity_count = int(input())  # the number of entities (e.g. factories and troops)
    for i in range(entity_count):
        my_dict = {}
        entity_id, entity_type, arg_1, arg_2, arg_3, arg_4, arg_5 = input().split()
        my_dict["entity_id"] = int(entity_id)
        my_dict["arg1"] = int(arg_1)
        my_dict["arg2"] = int(arg_2)
        my_dict["arg3"] = int(arg_3)
        my_dict["arg4"] = int(arg_4)
        my_dict["arg5"] = int(arg_5)
        if entity_type == "FACTORY":
            if my_dict["arg1"] == 1:
                my_bases.append(my_dict)

    print("MY_FACTORYES", file=sys.stderr)
    for base in my_bases:
        print(base , file=sys.stderr)

    # Write an action using print
    # To debug: print("Debug messages...", file=sys.stderr)

    
    # Any valid action, such as "WAIT" or "MOVE source destination cyborgs"
    print("MOVE 1 5 10")
    print("WAIT")

#idees
# 1- parcourir les bases m'appartenant
# 2- Si ma base a plus de (? nb_total)